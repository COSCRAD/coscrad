import { NotAvailable } from '../../lib/types/not-available';
import { NotFound } from '../../lib/types/not-found';
import { OK } from '../../lib/types/ok';
import { AggregateId } from '../types/AggregateId';
import { IIdGenerator } from './id-generator.interface';

export interface IIdManager extends IIdGenerator {
    /**
     *
     * @param id The ID whose status is of interest
     *
     * Returns
     * - `NotFound` if no such ID has previously been generated by our system
     * - `NotAvailable` if the ID has been generated by our system but is already in use
     * - `OK` if the ID was generated by our system and is available for use
     */
    status(id: AggregateId): Promise<NotFound | NotAvailable | OK>;

    /**
     *
     * @param id The system-generated ID that should be marked as in-use
     */
    use(id: AggregateId): Promise<void>;
}
