// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`command payload schemas The schema for command ADD_USER_TO_GROUP should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "user group",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "userId": {
    "coscradDataType": "UUID",
    "description": "the ID of the user that will be added to this group",
    "isArray": false,
    "isOptional": false,
    "label": "user ID",
    "referenceTo": "user",
  },
}
`;

exports[`command payload schemas The schema for command CREATE_BOOK_BIBLIOGRAPHIC_REFERENCE should have the expected value 1`] = `
{
  "abstract": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a brief summary of the referenced book",
    "isArray": false,
    "isOptional": true,
    "label": "abstract",
  },
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "sub-type of bibliographic reference (e.g., book, journal article, or court case)",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "creators": {
    "complexDataType": "NESTED_TYPE",
    "description": "the authors of the referenced book",
    "isArray": true,
    "isOptional": false,
    "label": "creators",
    "schema": {
      "name": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "full name of work's creator (free-form text)",
        "isArray": false,
        "isOptional": false,
        "label": "name",
      },
      "type": {
        "complexDataType": "ENUM",
        "description": "the person's role in creating the given work",
        "enumLabel": "Creator Type",
        "enumName": "BIBLIOGRAPHIC_SUBJECT_CREATOR_TYPE",
        "isArray": false,
        "isOptional": false,
        "label": "creator type",
        "labelsAndValues": [
          {
            "label": "artist",
            "value": "artist",
          },
          {
            "label": "author",
            "value": "author",
          },
          {
            "label": "director",
            "value": "director",
          },
        ],
      },
    },
  },
  "isbn": {
    "coscradDataType": "ISBN",
    "description": "the ISBN  of the referenced book",
    "isArray": false,
    "isOptional": true,
    "label": "ISBN",
  },
  "numberOfPages": {
    "coscradDataType": "POSITIVE_INTEGER",
    "description": "the number of pages in the referenced book",
    "isArray": false,
    "isOptional": true,
    "label": "number of pages",
  },
  "place": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the place where the referenced book was published",
    "isArray": false,
    "isOptional": true,
    "label": "place of publication",
  },
  "publisher": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the publisher who published the referenced book",
    "isArray": false,
    "isOptional": true,
    "label": "publisher",
  },
  "rawData": {
    "coscradDataType": "RAW_DATA",
    "description": "raw data from a third-party system (e.g. Zotero)",
    "isArray": false,
    "isOptional": true,
    "label": "raw data",
  },
  "title": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "title of the book in any language",
    "isArray": false,
    "isOptional": false,
    "label": "title",
  },
  "url": {
    "coscradDataType": "URL",
    "description": "a link to an external digital representation of the book",
    "isArray": false,
    "isOptional": true,
    "label": "external link",
  },
  "year": {
    "coscradDataType": "YEAR",
    "description": "a number representing the year the referenced book was published",
    "isArray": false,
    "isOptional": true,
    "label": "year",
  },
}
`;

exports[`command payload schemas The schema for command CREATE_COURT_CASE_BIBLIOGRAPHIC_REFERENCE should have the expected value 1`] = `
{
  "abstract": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a brief summary of the court case",
    "isArray": false,
    "isOptional": true,
    "label": "abstract",
  },
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "sub-type of bibliographic reference (e.g., book, journal article, or court case)",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "caseName": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the name of the court case",
    "isArray": false,
    "isOptional": false,
    "label": "case name",
  },
  "court": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "name of the court in which the case was decided",
    "isArray": false,
    "isOptional": true,
    "label": "court",
  },
  "dateDecided": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the date that the court case was decided",
    "isArray": false,
    "isOptional": true,
    "label": "date decided",
  },
  "pages": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a summary a larger document's pages relevant to this court case",
    "isArray": false,
    "isOptional": true,
    "label": "pages",
  },
  "rawData": {
    "coscradDataType": "RAW_DATA",
    "description": "raw data from third-party system (e.g. Zotero)",
    "isArray": false,
    "isOptional": true,
    "label": "raw data",
  },
  "url": {
    "coscradDataType": "URL",
    "description": "web link to additional information about the court case",
    "isArray": false,
    "isOptional": true,
    "label": "external link",
  },
}
`;

exports[`command payload schemas The schema for command CREATE_JOURNAL_ARTICLE_BIBLIOGRAPHIC_REFERENCE should have the expected value 1`] = `
{
  "abstract": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a brief summary of the referenced journal article",
    "isArray": false,
    "isOptional": true,
    "label": "abstract",
  },
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "sub-type of bibliographic reference (e.g., book, journal article, or court case)",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "creators": {
    "complexDataType": "NESTED_TYPE",
    "description": "the authors of the referenced journal article",
    "isArray": true,
    "isOptional": false,
    "label": "creators",
    "schema": {
      "name": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "full name of work's creator (free-form text)",
        "isArray": false,
        "isOptional": false,
        "label": "name",
      },
      "type": {
        "complexDataType": "ENUM",
        "description": "the person's role in creating the given work",
        "enumLabel": "Creator Type",
        "enumName": "BIBLIOGRAPHIC_SUBJECT_CREATOR_TYPE",
        "isArray": false,
        "isOptional": false,
        "label": "creator type",
        "labelsAndValues": [
          {
            "label": "artist",
            "value": "artist",
          },
          {
            "label": "author",
            "value": "author",
          },
          {
            "label": "director",
            "value": "director",
          },
        ],
      },
    },
  },
  "doi": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the DOI of the journal article",
    "isArray": false,
    "isOptional": true,
    "label": "DOI",
  },
  "issn": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the ISSN of the journal article",
    "isArray": false,
    "isOptional": true,
    "label": "ISSN",
  },
  "issueDate": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a free-form text representation of the date of publication",
    "isArray": false,
    "isOptional": false,
    "label": "issue date",
  },
  "pages": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "text summary of the pages on which this article appears in the larger journal",
    "isArray": false,
    "isOptional": true,
    "label": "pages",
  },
  "publicationTitle": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the name of the journal in which the article was published",
    "isArray": false,
    "isOptional": true,
    "label": "publication title",
  },
  "rawData": {
    "coscradDataType": "RAW_DATA",
    "description": "raw data from third-party system of origin (e.g. Zotero)",
    "isArray": false,
    "isOptional": true,
    "label": "raw data",
  },
  "title": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "title of the referenced journal article",
    "isArray": false,
    "isOptional": false,
    "label": "title",
  },
  "url": {
    "coscradDataType": "URL",
    "description": "an external web link to the referenced journal article",
    "isArray": false,
    "isOptional": true,
    "label": "external link",
  },
}
`;

exports[`command payload schemas The schema for command CREATE_SONG should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "song",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "audioURL": {
    "coscradDataType": "URL",
    "description": "a web URL link to the audio for this song",
    "isArray": false,
    "isOptional": false,
    "label": "audio link",
  },
  "lyrics": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "plain text representation of this song's lyrics",
    "isArray": false,
    "isOptional": true,
    "label": "lyrics",
  },
  "rawData": {
    "coscradDataType": "RAW_DATA",
    "description": "additional data from a legacy \\ third-party system source of the data",
    "isArray": false,
    "isOptional": true,
    "label": "raw data",
  },
  "title": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "song's title in the language",
    "isArray": false,
    "isOptional": true,
    "label": "title",
  },
  "titleEnglish": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "song's title in the colonial language",
    "isArray": false,
    "isOptional": true,
    "label": "title (colonial language)",
  },
}
`;

exports[`command payload schemas The schema for command CREATE_USER_GROUP should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "user group",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "description": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a summary of the purpose of this group (what its members have in common)",
    "isArray": false,
    "isOptional": false,
    "label": "description",
  },
  "label": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the name of the user group",
    "isArray": false,
    "isOptional": false,
    "label": "label",
  },
}
`;

exports[`command payload schemas The schema for command GRANT_RESOURCE_READ_ACCESS_TO_USER should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "user",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "resourceCompositeIdentifier": {
    "coscradDataType": "COMPOSITE_IDENTIFIER",
    "description": "the composite identifier of the resource to which the user will receive access",
    "isArray": false,
    "isOptional": false,
    "label": "resource composite identifier",
  },
}
`;

exports[`command payload schemas The schema for command GRANT_USER_ROLE should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "user",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "role": {
    "complexDataType": "ENUM",
    "description": "the role that will be granted to this user",
    "enumLabel": "User Role",
    "enumName": "COSCRAD_USER_ROLE",
    "isArray": false,
    "isOptional": false,
    "label": "role",
    "labelsAndValues": [
      {
        "label": "admin",
        "value": "projectAdmin",
      },
      {
        "label": "viewer",
        "value": "viewer",
      },
      {
        "label": "COSCRAD admin",
        "value": "superAdmin",
      },
    ],
  },
}
`;

exports[`command payload schemas The schema for command REGISTER_USER should have the expected value 1`] = `
{
  "aggregateCompositeIdentifier": {
    "complexDataType": "NESTED_TYPE",
    "description": "system-wide unique identifier",
    "isArray": false,
    "isOptional": false,
    "label": "Composite Identifier",
    "schema": {
      "id": {
        "coscradDataType": "UUID",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "type": {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "user",
        "isArray": false,
        "isOptional": false,
        "label": "type",
      },
    },
  },
  "userIdFromAuthProvider": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "the auth provider's unique ID for this user (the user must be added to the auth provider first)",
    "isArray": false,
    "isOptional": false,
    "label": "auth provider's ID",
  },
  "username": {
    "coscradDataType": "NON_EMPTY_STRING",
    "description": "a human-readable text identifier for this user",
    "isArray": false,
    "isOptional": false,
    "label": "username",
  },
}
`;
