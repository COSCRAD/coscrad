// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`User Management Queries when fetching schemas (/admin) should return the expected result 1`] = `
Array [
  Object {
    "description": "A tag is used to group related resources or notes in a non-hierarchical manner",
    "label": "Tag",
    "link": "/tags",
    "schema": Object {
      "id": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "label": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "a human readable text label for this tag",
        "isArray": false,
        "isOptional": false,
        "label": "label",
      },
      "members": Object {
        "coscradDataType": "COMPOSITE_IDENTIFIER",
        "description": "the composite identifier of every resource or note with this tag",
        "isArray": true,
        "isOptional": false,
        "label": "members",
      },
    },
    "type": "tag",
  },
  Object {
    "description": "A category tree provides a hierarchical organization of resources",
    "label": "Category",
    "link": "/treeOfKnowledge",
    "schema": Object {
      "children": Object {
        "complexDataType": "NESTED_TYPE",
        "description": "self similar reference to all categories that are direct-descendants of this category in the tree",
        "isArray": false,
        "isOptional": false,
        "label": "children",
        "schema": Object {
          "id": Object {
            "coscradDataType": "NON_EMPTY_STRING",
            "description": "unique identifier",
            "isArray": false,
            "isOptional": false,
            "label": "ID",
          },
          "label": Object {
            "coscradDataType": "NON_EMPTY_STRING",
            "description": "the user-facing label for this category",
            "isArray": false,
            "isOptional": false,
            "label": "label",
          },
          "members": Object {
            "coscradDataType": "COMPOSITE_IDENTIFIER",
            "description": "the composite identifier of every resource or note in this category",
            "isArray": true,
            "isOptional": false,
            "label": "members",
          },
        },
      },
      "id": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "label": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "the user-facing label for this category",
        "isArray": false,
        "isOptional": false,
        "label": "label",
      },
      "members": Object {
        "coscradDataType": "COMPOSITE_IDENTIFIER",
        "description": "the composite identifier of every resource or note in this category",
        "isArray": true,
        "isOptional": false,
        "label": "members",
      },
    },
    "type": "category",
  },
  Object {
    "description": "A user may belong to groups and have privileges to access data",
    "label": "User",
    "link": "/admin/users",
    "schema": Object {
      "id": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "profile": Object {
        "complexDataType": "NESTED_TYPE",
        "description": "the user's profile information",
        "isArray": false,
        "isOptional": true,
        "label": "profile",
        "schema": Object {
          "email": Object {
            "coscradDataType": "NON_EMPTY_STRING",
            "description": "the user's email address",
            "isArray": false,
            "isOptional": false,
            "label": "email",
          },
          "name": Object {
            "complexDataType": "NESTED_TYPE",
            "description": "the user's full name",
            "isArray": false,
            "isOptional": false,
            "label": "full name",
            "schema": Object {
              "firstName": Object {
                "coscradDataType": "NON_EMPTY_STRING",
                "description": "the user's first name",
                "isArray": false,
                "isOptional": false,
                "label": "first name",
              },
              "lastName": Object {
                "coscradDataType": "NON_EMPTY_STRING",
                "description": "the user's last name",
                "isArray": false,
                "isOptional": false,
                "label": "last name",
              },
            },
          },
        },
      },
      "roles": Object {
        "complexDataType": "ENUM",
        "description": "the user's roles, which grant privileges to perform certain read \\\\ write actions",
        "enumLabel": "User Role",
        "enumName": "COSCRAD_USER_ROLE",
        "isArray": true,
        "isOptional": false,
        "label": "roles",
        "labelsAndValues": Array [
          Object {
            "label": "admin",
            "value": "projectAdmin",
          },
          Object {
            "label": "viewer",
            "value": "viewer",
          },
          Object {
            "label": "COSCRAD admin",
            "value": "superAdmin",
          },
        ],
      },
      "username": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "a human-readable identifier for this user",
        "isArray": false,
        "isOptional": false,
        "label": "username",
      },
    },
    "type": "user",
  },
  Object {
    "description": "A user group serves to organize users based on shared privileges to access data",
    "label": "User Group",
    "link": "/admin/userGroups",
    "schema": Object {
      "description": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "a summary of the significance of this user group (what its members have in common)",
        "isArray": false,
        "isOptional": false,
        "label": "description",
      },
      "id": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "unique identifier",
        "isArray": false,
        "isOptional": false,
        "label": "ID",
      },
      "label": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "the name of the group",
        "isArray": false,
        "isOptional": false,
        "label": "label",
      },
      "userIds": Object {
        "coscradDataType": "NON_EMPTY_STRING",
        "description": "the ID of every user that is in this group",
        "isArray": true,
        "isOptional": false,
        "label": "user IDs",
      },
    },
    "type": "userGroup",
  },
]
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a coscrad admin when querying for user groups when fetching a group by ID when there is a group with the given ID should find the group 1`] = `
Object {
  "actions": Array [],
  "description": "This group is for members of the community only.",
  "id": "1",
  "label": "community members",
  "users": Array [
    Object {
      "id": "1",
      "profile": Object {
        "email": "llcj1985@aol.com",
        "name": Object {
          "firstName": "James",
          "lastName": "Jones",
        },
      },
      "roles": Array [
        "viewer",
      ],
      "username": "cool-james",
    },
  ],
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a coscrad admin when querying for user groups when fetching all groups should return the expected result 1`] = `
Object {
  "entities": Array [
    Object {
      "actions": Array [],
      "description": "This group is for members of the community only.",
      "id": "1",
      "label": "community members",
      "users": Array [
        Object {
          "id": "1",
          "profile": Object {
            "email": "llcj1985@aol.com",
            "name": Object {
              "firstName": "James",
              "lastName": "Jones",
            },
          },
          "roles": Array [
            "viewer",
          ],
          "username": "cool-james",
        },
      ],
    },
  ],
  "indexScopedActions": Array [],
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a coscrad admin when querying for users when fetching a user by ID when there is a user with the given ID should find the user 1`] = `
Object {
  "actions": Array [],
  "id": "1",
  "profile": Object {
    "email": "llcj1985@aol.com",
    "name": Object {
      "firstName": "James",
      "lastName": "Jones",
    },
  },
  "roles": Array [
    "viewer",
  ],
  "username": "cool-james",
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a coscrad admin when querying for users when fetching all users should return the expected result 1`] = `
Object {
  "entities": Array [
    Object {
      "actions": Array [],
      "id": "1",
      "profile": Object {
        "email": "llcj1985@aol.com",
        "name": Object {
          "firstName": "James",
          "lastName": "Jones",
        },
      },
      "roles": Array [
        "viewer",
      ],
      "username": "cool-james",
    },
  ],
  "indexScopedActions": Array [],
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a project admin when querying for user groups when fetching a group by ID when there is a group with the given ID should find the group 1`] = `
Object {
  "actions": Array [],
  "description": "This group is for members of the community only.",
  "id": "1",
  "label": "community members",
  "users": Array [
    Object {
      "id": "1",
      "profile": Object {
        "email": "llcj1985@aol.com",
        "name": Object {
          "firstName": "James",
          "lastName": "Jones",
        },
      },
      "roles": Array [
        "viewer",
      ],
      "username": "cool-james",
    },
  ],
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a project admin when querying for user groups when fetching all groups should return the expected result 1`] = `
Object {
  "entities": Array [
    Object {
      "actions": Array [],
      "description": "This group is for members of the community only.",
      "id": "1",
      "label": "community members",
      "users": Array [
        Object {
          "id": "1",
          "profile": Object {
            "email": "llcj1985@aol.com",
            "name": Object {
              "firstName": "James",
              "lastName": "Jones",
            },
          },
          "roles": Array [
            "viewer",
          ],
          "username": "cool-james",
        },
      ],
    },
  ],
  "indexScopedActions": Array [],
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a project admin when querying for users when fetching a user by ID when there is a user with the given ID should find the user 1`] = `
Object {
  "actions": Array [],
  "id": "1",
  "profile": Object {
    "email": "llcj1985@aol.com",
    "name": Object {
      "firstName": "James",
      "lastName": "Jones",
    },
  },
  "roles": Array [
    "viewer",
  ],
  "username": "cool-james",
}
`;

exports[`User Management Queries when the system user issuing the command is authorized when the user is a project admin when querying for users when fetching all users should return the expected result 1`] = `
Object {
  "entities": Array [
    Object {
      "actions": Array [],
      "id": "1",
      "profile": Object {
        "email": "llcj1985@aol.com",
        "name": Object {
          "firstName": "James",
          "lastName": "Jones",
        },
      },
      "roles": Array [
        "viewer",
      ],
      "username": "cool-james",
    },
  ],
  "indexScopedActions": Array [],
}
`;
