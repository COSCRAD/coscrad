// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/bibliographicReferences/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "data": Object {
      "abstract": "This is the abstract, NOT a general note!",
      "creators": Array [
        Object {
          "name": "Alana Duvernay",
          "type": "author",
        },
      ],
      "isbn": "978-1-895811-34-6",
      "numberOfPages": 455,
      "place": "Kennebunk Port, Maine",
      "publisher": "Atlantic Publishing",
      "title": "A Day in the Life",
      "type": "book",
      "url": "https://atlanticpublishing.com",
      "year": 1999,
    },
    "id": "1",
    "tags": Array [
      Object {
        "id": "2",
        "label": "animals",
      },
    ],
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/books/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "author": "John Doeburg",
    "id": "23",
    "pages": Array [
      Object {
        "identifier": "1",
        "text": "foo",
        "translation": "dee foo",
      },
      Object {
        "identifier": "2",
        "text": "blah blah blah",
        "translation": "blahas",
      },
    ],
    "publicationDate": "2002",
    "subtitle": "The wolf's revenge",
    "tags": Array [
      Object {
        "id": "1",
        "label": "plants",
      },
    ],
    "title": "Three Little Pigs",
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/mediaItems/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "contributions": Array [
      Object {
        "contributorId": "2",
        "role": "host",
      },
    ],
    "id": "1",
    "lengthMilliseconds": 2500,
    "mimeType": "audio/mpeg",
    "tags": Array [
      Object {
        "id": "5",
        "label": "legends",
      },
    ],
    "title": "episode title (in language)",
    "titleEnglish": "Metal Mondays episode 1",
    "url": "https://www.metalmondays.com/1.mp3",
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/photographs/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "id": "0",
    "imageURL": "https://www.mysound.org/downloads/Adiitsii-Running.png",
    "photographer": "Susie McRealart",
    "tags": Array [
      Object {
        "id": "3",
        "label": "placenames",
      },
    ],
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/songs/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "audioURL": "https://www.myaudio.com/lamb.mp3",
    "contributions": Array [
      "1 (performer)",
    ],
    "id": "1",
    "lengthMilliseconds": 3500,
    "lyrics": "Mary had a little lamb, little lamb.",
    "startMilliseconds": 0,
    "tags": Array [
      Object {
        "id": "5",
        "label": "legends",
      },
    ],
    "title": "Song title in language",
    "titleEnglish": "Mary had a little lamb",
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/spatialFeatures/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "geometry": Object {
      "coordinates": Array [
        100,
        0,
      ],
      "type": "Point",
    },
    "id": "100",
    "tags": Array [
      Object {
        "id": "1",
        "label": "plants",
      },
    ],
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/terms/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "contributor": "",
    "id": "1",
    "tags": Array [
      Object {
        "id": "1",
        "label": "plants",
      },
    ],
    "term": "Chil-term-1",
    "termEnglish": "Engl-term-1",
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/transcribedAudioItems/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "audioURL": "https://www.mysound.org/downloads/123.mp3.mp3",
    "id": "110",
    "length": 20000,
    "plainText": "
[12000] There once was a little wooden boy. [15550]
[18300] His name was Pinocchio. [19240]",
    "start": 0,
    "tags": Array [
      Object {
        "id": "3",
        "label": "placenames",
      },
    ],
  },
}
`;

exports[`GET  (fetch view models) When querying for a single View Model by ID GET /resources/vocabularyLists/:id when the resource is published when an resource with the id is found should return the expected response 1`] = `
Object {
  "actions": Array [
    Object {
      "description": "Allow a user to view (but not edit) a given resource",
      "form": Object {
        "fields": Array [
          Object {
            "description": "add description",
            "label": "add label",
            "name": "userId",
            "type": "TEXT_FIELD",
          },
          Object {
            "description": "add description",
            "label": "add label",
            "name": "resourceCompositeIdentifier",
            "type": "JSON_INPUT",
          },
        ],
      },
      "label": "Grant Read Access to User",
      "type": "GRANT_RESOURCE_READ_ACCESS_TO_USER",
    },
  ],
  "data": Object {
    "entries": Array [
      Object {
        "term": Object {
          "contributor": "",
          "id": "1",
          "term": "Chil-term-1",
          "termEnglish": "Engl-term-1",
        },
        "variableValues": Object {
          "person": "11",
        },
      },
      Object {
        "term": Object {
          "contributor": "",
          "id": "2",
          "term": "Chil-term-2",
          "termEnglish": "Engl-term-2",
        },
        "variableValues": Object {
          "person": "21",
        },
      },
    ],
    "id": "1",
    "name": "test VL 1 chil",
    "nameEnglish": "test VL 1 engl",
    "tags": Array [
      Object {
        "id": "1",
        "label": "plants",
      },
    ],
    "variables": Array [
      Object {
        "name": "person",
        "type": "dropbox",
        "validValues": Array [
          Object {
            "display": "I",
            "value": "11",
          },
          Object {
            "display": "We",
            "value": "21",
          },
        ],
      },
    ],
  },
}
`;
